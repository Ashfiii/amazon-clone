{"version":3,"sources":["StateProvider.js","firebase.js","Header.js","Product.js","Home.js","reducer.js","Subtotal.js","CheckoutProduct.js","Checkout.js","Login.js","Payment.js","App.js","serviceWorker.js","index.js","images/tv.jpg","images/amazon_logo.png","images/header-logo.jpg","images/amazon-black.png","images/dishwasher.jpg","images/amazon-ad.jpg"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Header","cart","user","className","to","src","img","type","onClick","signOut","displayName","length","Product","id","title","price","image","rating","dispatch","Array","fill","map","_","i","alt","item","Home","headerImage","product2","getCartTotal","reduce","amount","parseInt","state","action","index","findIndex","cartItem","newCart","splice","console","warn","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","push","CheckoutProduct","Checkout","Login","useState","email","setEmail","password","setPassword","username","setUsername","logo","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","updateProfile","Payment","stripe","useStripe","elements","useElements","processing","setProcessing","succeeded","setSucceeded","setError","disabled","setDisabled","clientSecret","setClientSecret","useEffect","a","axios","method","url","response","data","getClientSecret","log","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","replace","empty","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0f3c57b0.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCJ-1z4SDLPr_8xd9vZkLOrYRyYKtngAok\",\r\n    authDomain: \"clone-4f1ea.firebaseapp.com\",\r\n    databaseURL: \"https://clone-4f1ea.firebaseio.com\",\r\n    projectId: \"clone-4f1ea\",\r\n    storageBucket: \"clone-4f1ea.appspot.com\",\r\n    messagingSenderId: \"117774712884\",\r\n    appId: \"1:117774712884:web:a5bfbb155acec2244bca61\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db, auth};","import React from 'react';\r\nimport './Header.css';\r\nimport img from './images/amazon_logo.png';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport {Link} from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    const [{cart, user}, dispatch] = useStateValue();\r\n\r\n    const handleAuthentication = ()=>{\r\n        if(user){\r\n            auth.signOut();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img className=\"header__logo\" src={img} />\r\n            </Link>\r\n            <div className=\"header__search\">\r\n                <input className=\"header__searchInput\" type=\"text\"/>\r\n                <SearchIcon className=\"header__searchIcon\"/>\r\n            </div>\r\n            <div className=\"header__nav\">\r\n                <Link to={!user && '/login'}>\r\n                    <div onClick={handleAuthentication} className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Hello {user?.displayName}</span>\r\n                        <span className=\"header__optionLineTwo\">{user ? 'Sign Out':'Sign In'}</span>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">Returns</span>\r\n                    <span className=\"header__optionLineTwo\">& Orders</span>\r\n                </div>\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">Your</span>\r\n                    <span className=\"header__optionLineTwo\">Prime</span>\r\n                </div>\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header__optionBasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header__optionLineTwo header__basketCount\">{cart.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './Product.css'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Product({id, title, price, image, rating}) {\r\n    const [{cart}, dispatch] = useStateValue()\r\n\r\n    const addToCart = ()=>{\r\n        dispatch({\r\n            type: \"ADD_TO_CART\",\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                price: price,\r\n                image: image,\r\n                rating: rating\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product__info\">\r\n                <p>{title}</p>\r\n                <p className=\"product__price\">\r\n                    Rs <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product__rating\">\r\n                    {Array(rating).fill().map((_, i) =>(\r\n                        <span>⭐</span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <img src={image} alt=\"\"/>\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\r\nimport headerImage from './images/header-logo.jpg';\r\nimport './Home.css';\r\nimport Product from './Product';\r\nimport product1 from './images/dishwasher.jpg';\r\nimport product2 from './images/tv.jpg';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__container\">\r\n               <img className=\"home__image\" src={headerImage} alt=\"\"/>\r\n            </div>\r\n            <div className=\"home__row\">\r\n                <Product \r\n                id='2'\r\n                title='LG 126 cms (50 inches) 4K Ultra HD Smart LED TV 50UM7700PTA | with Built-in Alexa (Ceramic Black)'\r\n                price= '60000'\r\n                image={product2}\r\n                rating={5}/>\r\n                <Product \r\n                id='2'\r\n                title='LG 126 cms (50 inches) 4K Ultra HD Smart LED TV 50UM7700PTA | with Built-in Alexa (Ceramic Black)'\r\n                price= '60000'\r\n                image={product2}\r\n                rating={5}/>\r\n                <Product \r\n                id='2'\r\n                title='LG 126 cms (50 inches) 4K Ultra HD Smart LED TV 50UM7700PTA | with Built-in Alexa (Ceramic Black)'\r\n                price= '60000'\r\n                image={product2}\r\n                rating={5}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const initialState = {\r\n    cart : [],\r\n    user: null\r\n}\r\n\r\nexport const getCartTotal = (cart)=>\r\n    cart ?.reduce((amount, item) =>parseInt(item.price) + amount, 0);\r\n\r\n    \r\n    // export const getCartTotal = (cart)=>{\r\n    //     let i;\r\n    //     let totalPrice = 0;\r\n    //     for(i=0; i<cart.length; i++){\r\n    //         totalPrice += parseInt(cart[i].price)\r\n    //     }\r\n    // }\r\n    \r\n\r\nconst reducer = (state, action) =>{\r\n    switch (action.type){\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart , action.item] \r\n            }\r\n        case 'REMOVE_FROM_CART':\r\n           const index = state.cart.findIndex((cartItem)=> cartItem.id === action.id);\r\n           let newCart = [...state.cart];\r\n\r\n           if(index>=0){\r\n               newCart.splice(index, 1);\r\n           }else{\r\n               console.warn(`Cannot remove product as (id: ${action.id}) is not in cart`)\r\n           }\r\n\r\n           return{\r\n               ...state,\r\n               cart: newCart\r\n           }\r\n           case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport './Subtotal.css';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getCartTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{cart}, dispatch] = useStateValue()\r\n    \r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n            renderText={(value) =>(\r\n                <>\r\n                    <p>Subtotal ({cart.length} items): <strong>{value}</strong></p>\r\n                    <small className=\"subtotal__gift\">\r\n                        <input type=\"checkbox\" />This order contains a gift\r\n                    </small>\r\n                </>\r\n            )}\r\n            decimalScale={2}\r\n            //value={totalPrice}\r\n            value={getCartTotal(cart)}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            prefix={\"₹\"}\r\n            />\r\n            <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","import React from 'react';\r\nimport './CheckoutProduct.css';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckoutProduct({id, image, title, price, rating}) {\r\n    const [{cart}, dispatch] = useStateValue()\r\n\r\n    const removeFromCart = ()=>{\r\n        dispatch({\r\n            type: \"REMOVE_FROM_CART\",\r\n            id: id\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct__image\" src={image} />\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                    </p>\r\n                <p className=\"checkoutProduct__rating\">\r\n                {Array(rating).fill().map((_, i) =>(\r\n                                    <span>⭐</span>\r\n                                ))}\r\n                </p>\r\n                <button onClick={removeFromCart}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","import React from 'react';\r\nimport './Checkout.css';\r\nimport image from './images/amazon-ad.jpg';\r\nimport Subtotal from './Subtotal';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Checkout() {\r\n    const [{cart}, dispatch] = useStateValue()\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                {/* <img className=\"checkout__ad\" src={image} alt=\"\" /> */}\r\n                <div>\r\n                    <h2 className=\"checkout__title\">Shopping Cart</h2>\r\n                    {cart.length==0 ? <h2 className=\"checkout__header\">No Items in the Cart</h2>: \r\n                    cart.map(item =>(\r\n                        <CheckoutProduct \r\n                        id={item.id}\r\n                        title={item.title}\r\n                        price= {item.price}\r\n                        image={item.image}\r\n                        rating={item.rating}\r\n                    />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport logo from './images/amazon-black.png';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {auth} from './firebase';\r\n\r\nfunction Login() {\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const signIn = (e)=>{\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then(auth =>{\r\n                history.push('/');\r\n        }) \r\n        .catch(error => alert(error.message))\r\n    }\r\n\r\n    const register = (e)=>{\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then(auth =>{\r\n            if(auth){\r\n                history.push('/');\r\n            }\r\n            return auth.user.updateProfile({\r\n                displayName: username\r\n              }) \r\n        }) \r\n        .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to=\"/\">\r\n                <img className=\"login__logo\" src={logo} alt=\"\" />\r\n            </Link>\r\n            <div className=\"login__container\">\r\n                <h1>Login</h1>\r\n                <form>\r\n                    <h5>Username</h5>\r\n                    <input type=\"text\" value={username} onChange={e=>setUsername(e.target.value)}/>\r\n                    <h5>Email</h5>\r\n                    <input type=\"text\" value={email} onChange={e=>setEmail(e.target.value)}/>\r\n                    <h5>Password</h5>\r\n                    <input type=\"password\" value={password} onChange={e=>setPassword(e.target.value)}/>\r\n                    <button className=\"login__signInButton\" onClick={signIn}>Sign In</button>\r\n                </form>\r\n                <p>By continuing, you agree to Amazon's Conditions of Use and Privacy Notice.</p>\r\n            </div>\r\n            <p>New to Amazon?</p>\r\n            <button className=\"login__registerButton\" onClick={register}>Create your Amazon account</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useEffect, useState} from 'react';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { getCartTotal } from './reducer';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Payment() {\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory();\r\n\r\n    const [{cart, user}, dispatch] = useStateValue();\r\n\r\n    const [processing, setProcessing] = useState('');\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                url: `/payments/create?total=${getCartTotal(cart) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [cart])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n\r\n    const handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent})=>{\r\n            setSucceeded(true)\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange = event=>{\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <h1><Link to=\"/checkout\">Checkout ({cart?.length}) items</Link></h1>\r\n            <div className=\"payment__container\">\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.displayName}</p>\r\n                        <p>Resaldar Nagar, Ranchi</p>\r\n                        <p>Jharkhand, India</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review Items and Delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment__items\">\r\n                        {cart.map(item =>(\r\n                            <CheckoutProduct \r\n                            id={item.id}\r\n                            title={item.title}\r\n                            price= {item.price}\r\n                            image={item.image}\r\n                            rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        <form onClick={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment__container\">\r\n                            <CurrencyFormat \r\n                                renderText={(value) =>(\r\n                                <h3>OrderTotal: {value}</h3>\r\n                                )}\r\n                                decimalScale={2}\r\n                                value={getCartTotal(cart)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"₹\"}\r\n                                />\r\n                                 <button disabled={processing || disabled || succeeded}>\r\n                                <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\r\n                            </button>\r\n                            </div>\r\n                                {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'; \nimport Checkout from './Checkout'; \nimport Login from './Login';\nimport {auth} from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {Elements, loadElements} from '@stripe/react-stripe-js';\n\nconst promise = loadStripe(\"pk_test_51Hqf3FCnUtwGr5XVXCYNhxXswkSsRxoXVmPcyU1VfvaDC75xi62CDdorDQKD6dIrR8ipLQkAIzPMb9EnCRCxoodx00DxWx07FK\")\n\nfunction App() {\n\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(()=>{\n    auth.onAuthStateChanged(authUser =>{\n      console.log(authUser);\n      if(authUser){\n        dispatch({\n          type: 'SET_USER',\n          user: authUser,\n        })\n      }\n      else{\n        dispatch({\n          type: 'SET_USER',\n          user: null,\n          username: null\n        })\n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"app\">\n          <Switch>\n          <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/checkout\">\n              <Header />  \n              <Checkout />\n            </Route>\n            <Route path=\"/payment\">\n              <Elements stripe={promise}>\n                <Payment />\n              </Elements>\n            </Route>\n            <Route path=\"/\">\n              <Header />\n              <Home />\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, {initialState} from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tv.714941f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazon_logo.7451f65b.png\";","module.exports = __webpack_public_path__ + \"static/media/header-logo.e702f5ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazon-black.b8ad586d.png\";","module.exports = __webpack_public_path__ + \"static/media/dishwasher.2feb2912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazon-ad.cb004e10.jpg\";"],"sourceRoot":""}